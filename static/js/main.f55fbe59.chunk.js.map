{"version":3,"sources":["components/infobox/Infobox.js","components/table/Table.js","components/map/Map.js","App.js","index.js"],"names":["Infobox","title","number","total","color","onClick","ifActive","bgColor","textColor","Card","className","style","borderLeft","backgroundColor","CardContent","Table","countries","map","country","numeral","cases","format","casesTypeColors","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","backgroundImage","flag","Map","props","mapCenter","zoom","TileLayer","url","attribution","countryData","App","useState","setCountryData","setCountries","tableData","setTableData","lng","infoData","setInfoData","setCasesType","sortTheData","sortedData","sort","a","b","useEffect","fetch","then","response","json","console","log","initializeData","label","value","iso2","dataList","getCountriesData","countryChange","e","countryCode","printSyntex","stat","name","list","searchable","onChange","todayCases","active","todayRecovered","todayDeaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f55fbe59.chunk.js","sourcesContent":["import { Card, CardContent } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport './infobox.css';\r\n\r\nfunction Infobox({title, number, total, color, onClick, ifActive}) {\r\n    const bgColor = (ifActive)?(color+\"40\"):(\"white\"); \r\n    const textColor = (ifActive)?(\"#4056A1\"):(color);\r\n    return (\r\n        <Card className=\"infobox\"\r\n            style={{borderLeft:`10px solid ${color}`, color:`${textColor}`, backgroundColor:`${bgColor}`}}\r\n            onClick={onClick}>\r\n            <CardContent>\r\n                <div className=\"cardLeft\">\r\n                    {/* title */}\r\n                    <div className=\"infobox__title\">\r\n                        <b>{title}</b>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n            <CardContent>\r\n                <div className=\"cardRight\">\r\n                    {/* total */}\r\n                    <div className=\"infobox__total\">\r\n                        <b>{number}</b> <br /> {total} <b>Total</b>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Infobox\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div>\r\n      <div className=\"table\">\r\n        <div className=\"heading\">Active Covid-19 Cases</div>\r\n        {countries.map((country) => (\r\n          <tr>\r\n            <td>{country.country}</td>\r\n            <td>\r\n              <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nimport { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 400,\r\n  },\r\n  recovered: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 600,\r\n  },\r\n  deaths: {\r\n    hex: \"#4056a1\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nconst showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.2}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">\r\n            {country.country}\r\n          </div>\r\n          <div className=\"info-confirmed\">\r\n            Cases:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\nfunction Map(props) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={props.mapCenter} zoom={3}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(props.countryData, props.casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\nimport { DropdownMultiple, Dropdown } from 'reactjs-dropdown-component';\nimport numeral from \"numeral\";\nimport './App.css';\n\nimport Infobox from './components/infobox/Infobox';\nimport Table from './components/table/Table';\nimport Map from './components/map/Map';\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countryData, setCountryData] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({lat: 20.5937, lng: 78.9629});\n  const [infoData, setInfoData] = useState({});\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  const sortTheData = (data) => {\n    const sortedData = [...data];\n    sortedData.sort((a,b)=>( (a.cases > b.cases)?(-1):(1) ) );\n    return sortedData;\n  }\n\n  useEffect(() => {\n    const initializeData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response)=>(response.json()))\n      .then((data)=>{\n        setInfoData(data);\n        console.log(data);\n      })\n    };\n    initializeData();\n  }, []);\n\n  useEffect (() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            label: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const dataList = data.map((country)=>({\n            country: country.country,\n            cases: country.cases,\n          })); \n          setCountryData(data);\n          setCountries(countries);\n          setTableData(sortTheData(dataList));\n          console.log(\"QWERTY\", tableData);\n        });\n    };\n    getCountriesData();\n    console.log(\"ASDFG\", tableData);\n  }, []);\n\n  const countryChange = async (e) => {\n    const countryCode = e.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInfoData(data);\n        console.log(data);\n      });\n  };\n\n  const printSyntex = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n  return (\n    <div>\n      <div className=\"navBar\">\n        <div className=\"dropdown\">\n          <Dropdown\n            name=\"Countries\"\n            title=\"Worldwide\"\n            list={countries}\n            searchable={[\"Search for location\", \"No matching location\"]}\n            onChange={(e)=>{countryChange(e)}}\n          />\n        </div>\n        <div className=\"appTitle\"><b>Covid-19</b> Live Updates</div>\n      </div>\n      <div className=\"app\">\n        <div className=\"app__left\">\n          <Infobox \n            title={\"Active cases\"}\n            number={printSyntex(infoData.todayCases)}\n            total={numeral(infoData.active).format(\"0.0000a\")}\n            color={\"#B80C3F\"}\n            onClick={(e)=>{setCasesType(\"cases\")}}\n            ifActive={(casesType === \"cases\")?(1):(0)}/> \n          <Infobox \n            title={\"Recovered\"}\n            number={printSyntex(infoData.todayRecovered)}\n            total={numeral(infoData.recovered).format(\"0.0000a\")}\n            color={\"#48A14D\"}\n            onClick={(e)=>{setCasesType(\"recovered\")}}\n            ifActive={(casesType === \"recovered\")?(1):(0)}/> \n          <Infobox \n            title={\"Deaths\"}\n            number={printSyntex(infoData.todayDeaths)}\n            total={numeral(infoData.deaths).format(\"0.0000a\")}\n            color={\"#B80C3F\"}\n            onClick={(e)=>{setCasesType(\"deaths\")}}\n            ifActive={(casesType === \"deaths\")?(1):(0)}/> \n\n          <Table countries={tableData} />\n        </div>\n        <div className=\"app__right\">\n          <Map \n            countryData = {countryData}\n            casesType = {casesType}\n            mapCenter = {mapCenter}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}